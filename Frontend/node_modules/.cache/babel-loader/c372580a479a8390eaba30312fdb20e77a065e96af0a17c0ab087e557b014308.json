{"ast":null,"code":"import axios from 'axios';\nexport default {\n  data() {\n    return {\n      product: {\n        name: '',\n        // Autres propriétés de produit ici\n        categories: []\n      },\n      categories: []\n    };\n  },\n  methods: {\n    submitForm() {\n      // Envoyer le formulaire, vous pouvez mettre ici la logique d'envoi\n    },\n    updateCategories() {\n      axios.get(\"http://127.0.0.1:8000/api/categories\").then(({\n        data\n      }) => {\n        this.categories = data;\n      }).catch(error => {\n        console.error(\"Erreur lors de la récupération des catégories :\", error);\n      });\n    }\n  },\n  mounted() {\n    this.updateCategories(); // Mettre à jour les catégories au chargement du composant\n  },\n  created() {\n    // Écouter l'événement d'ajout de catégorie et mettre à jour la liste des catégories\n    this.$on('category-added', this.updateCategories);\n  },\n  beforeUnmount() {\n    // Supprimer l'écouteur d'événement avant la destruction du composant\n    this.$off('category-added', this.updateCategories);\n  }\n};","map":{"version":3,"names":["axios","data","product","name","categories","methods","submitForm","updateCategories","get","then","catch","error","console","mounted","created","$on","beforeUnmount","$off"],"sources":["C:\\Users\\IKRAM\\Coding_Cha\\app_codingchan\\src\\components\\ProductForm.vue"],"sourcesContent":["<template>\n    <form @submit.prevent=\"submitForm\">\n      <div class=\"form-group\">\n        <label for=\"name\">Nom du Produit:</label>\n        <input id=\"name\" type=\"text\" class=\"form-control\" v-model=\"product.name\" required>\n      </div>\n      <!-- Autres champs de formulaire ici -->\n      <div class=\"form-group\">\n        <label for=\"categories\">Catégorie:</label>\n        <select id=\"categories\" class=\"form-control\" v-model=\"product.categories\" required>\n          <option v-for=\"category in categories\" :key=\"category.id\" :value=\"category.id\">{{ category.name }}</option>\n        </select>\n      </div>\n      <button type=\"submit\" class=\"btn btn-primary\">Ajouter</button>\n    </form>\n  </template>\n  \n  <script>\n  import axios from 'axios';\n  \n  export default {\n    data() {\n      return {\n        product: {\n          name: '',\n          // Autres propriétés de produit ici\n          categories: []\n        },\n        categories: []\n      };\n    },\n    methods: {\n      submitForm() {\n        // Envoyer le formulaire, vous pouvez mettre ici la logique d'envoi\n      },\n      updateCategories() {\n        axios.get(\"http://127.0.0.1:8000/api/categories\")\n          .then(({ data }) => {\n            this.categories = data;\n          })\n          .catch(error => {\n            console.error(\"Erreur lors de la récupération des catégories :\", error);\n          });\n      }\n    },\n    mounted() {\n      this.updateCategories(); // Mettre à jour les catégories au chargement du composant\n    },\n    created() {\n      // Écouter l'événement d'ajout de catégorie et mettre à jour la liste des catégories\n      this.$on('category-added', this.updateCategories);\n    },\n    beforeUnmount() {\n      // Supprimer l'écouteur d'événement avant la destruction du composant\n      this.$off('category-added', this.updateCategories);\n    }\n  }\n  </script>\n  \n  <style>\n  form {\n    max-width: 450px;\n    margin: 30px auto;\n    background: rgb(223, 236, 236);\n    text-align: left;\n    padding: 70px;\n    border-radius: 14px;\n  }\n  label {\n    color: rgb(11, 12, 12);\n    display: block;\n    margin: 25px 0 15px;\n    font-size: 1em;\n    text-transform: uppercase;\n    letter-spacing: 1px;\n    font-weight: bold;\n  }\n  input, textarea, select {\n    display: block;\n    padding: 10px 6px;\n    width: 100%;\n    border: none;\n    border-bottom: 2px solid gainsboro;\n    color: #555;\n  }\n  button[type=\"submit\"] {\n    margin-top: 30px;\n    padding: 10px 20px;\n    background-color: #333;\n    color: #fff;\n    border: none;\n    border-radius: 5px;\n    cursor: pointer;\n  }\n  </style>\n  \n  "],"mappings":"AAkBE,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,OAAO,EAAE;QACPC,IAAI,EAAE,EAAE;QACR;QACAC,UAAU,EAAE;MACd,CAAC;MACDA,UAAU,EAAE;IACd,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,UAAUA,CAAA,EAAG;MACX;IAAA,CACD;IACDC,gBAAgBA,CAAA,EAAG;MACjBP,KAAK,CAACQ,GAAG,CAAC,sCAAsC,EAC7CC,IAAI,CAAC,CAAC;QAAER;MAAK,CAAC,KAAK;QAClB,IAAI,CAACG,UAAS,GAAIH,IAAI;MACxB,CAAC,EACAS,KAAK,CAACC,KAAI,IAAK;QACdC,OAAO,CAACD,KAAK,CAAC,iDAAiD,EAAEA,KAAK,CAAC;MACzE,CAAC,CAAC;IACN;EACF,CAAC;EACDE,OAAOA,CAAA,EAAG;IACR,IAAI,CAACN,gBAAgB,CAAC,CAAC,EAAE;EAC3B,CAAC;EACDO,OAAOA,CAAA,EAAG;IACR;IACA,IAAI,CAACC,GAAG,CAAC,gBAAgB,EAAE,IAAI,CAACR,gBAAgB,CAAC;EACnD,CAAC;EACDS,aAAaA,CAAA,EAAG;IACd;IACA,IAAI,CAACC,IAAI,CAAC,gBAAgB,EAAE,IAAI,CAACV,gBAAgB,CAAC;EACpD;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}