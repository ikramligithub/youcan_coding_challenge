{"ast":null,"code":"import axios from 'axios';\nimport mitt from 'mitt'; // Importer la bibliothèque pour les événements\n\nexport default {\n  data() {\n    return {\n      product: {\n        name: '',\n        description: '',\n        price: null,\n        image: '',\n        category_id: []\n      },\n      categories: []\n    };\n  },\n  methods: {\n    submitForm() {\n      axios.post(\"http://127.0.0.1:8000/api/products\", this.product).then(response => {\n        console.log(response.data);\n        alert(\"Produit ajouté avec succès\");\n        // Reset the form or navigate to another page upon successful submission\n      }).catch(error => {\n        console.error(\"Erreur lors de l'ajout du produit :\", error);\n        alert(\"Échec de l'ajout du produit\");\n      });\n    },\n    updateCategories() {\n      axios.get(\"http://127.0.0.1:8000/api/categories\").then(({\n        data\n      }) => {\n        this.categories = data;\n      }).catch(error => {\n        console.error(\"Erreur lors de la récupération des catégories :\", error);\n      });\n    }\n  },\n  mounted() {\n    this.updateCategories(); // Mettre à jour les catégories au chargement du composant\n    this.$emitter = mitt(); // Initialiser l'émetteur d'événements\n    this.$emitter.on('category-added', this.updateCategories); // Écouter l'événement d'ajout de catégorie\n  },\n  beforeUnmount() {\n    this.$emitter.off('category-added', this.updateCategories); // Supprimer l'écouteur d'événement avant la destruction du composant\n  }\n};","map":{"version":3,"names":["axios","mitt","data","product","name","description","price","image","category_id","categories","methods","submitForm","post","then","response","console","log","alert","catch","error","updateCategories","get","mounted","$emitter","on","beforeUnmount","off"],"sources":["C:\\Users\\IKRAM\\Coding_Cha\\app_codingchan\\src\\components\\ProductForm.vue"],"sourcesContent":["<template>\n  <form @submit.prevent=\"submitForm\">\n    <div class=\"form-group\">\n      <label for=\"name\">Nom du Produit:</label>\n      <input id=\"name\" type=\"text\" class=\"form-control\" v-model=\"product.name\" required>\n    </div>\n    <div class=\"form-group\">\n      <label for=\"description\">Description:</label>\n      <textarea id=\"description\" class=\"form-control\" v-model=\"product.description\"></textarea>\n    </div>\n    <div class=\"form-group\">\n      <label for=\"price\">Prix:</label>\n      <input id=\"price\" type=\"number\" class=\"form-control\" v-model=\"product.price\" required>\n    </div>\n    <div class=\"form-group\">\n      <label for=\"image\">Image:</label>\n      <input id=\"image\" type=\"file\" class=\"form-control-file\" @change=\"handleFileUpload\">\n    </div>\n    <div class=\"form-group\">\n      <label for=\"categories\">Catégorie:</label>\n      <select id=\"categories\" class=\"form-control\" v-model=\"product.categories\" required>\n        <option v-for=\"category in categories\" :key=\"category.id\" :value=\"category.id\">{{ category.name }}</option>\n      </select>\n    </div>\n    <button type=\"submit\" class=\"btn btn-primary\">Ajouter</button>\n  </form>\n</template>\n\n<script>\nimport axios from 'axios';\nimport mitt from 'mitt'; // Importer la bibliothèque pour les événements\n\nexport default {\n  data() {\n    return {\n      product: {\n        name: '',\n        description: '',\n        price: null,\n        image: '',\n        category_id: []\n      },\n      categories: []\n    };\n  },\n  methods: {\n    submitForm() {\n      axios.post(\"http://127.0.0.1:8000/api/products\", this.product)\n        .then(response => {\n          console.log(response.data);\n          alert(\"Produit ajouté avec succès\");\n          // Reset the form or navigate to another page upon successful submission\n        })\n        .catch(error => {\n          console.error(\"Erreur lors de l'ajout du produit :\", error);\n          alert(\"Échec de l'ajout du produit\");\n        });\n    },\n    \n    updateCategories() {\n      axios.get(\"http://127.0.0.1:8000/api/categories\")\n        .then(({ data }) => {\n          this.categories = data;\n        })\n        .catch(error => {\n          console.error(\"Erreur lors de la récupération des catégories :\", error);\n        });\n    }\n  },\n  mounted() {\n    this.updateCategories(); // Mettre à jour les catégories au chargement du composant\n    this.$emitter = mitt(); // Initialiser l'émetteur d'événements\n    this.$emitter.on('category-added', this.updateCategories); // Écouter l'événement d'ajout de catégorie\n  },\n  beforeUnmount() {\n    this.$emitter.off('category-added', this.updateCategories); // Supprimer l'écouteur d'événement avant la destruction du composant\n  }\n}\n</script>\n\n<style>\nform {\n  max-width: 450px;\n  margin: 30px auto;\n  background: rgb(223, 236, 236);\n  text-align: left;\n  padding: 70px;\n  border-radius: 14px;\n}\nlabel {\n  color: rgb(11, 12, 12);\n  display: block;\n  margin: 25px 0 15px;\n  font-size: 1em;\n  text-transform: uppercase;\n  letter-spacing: 1px;\n  font-weight: bold;\n}\ninput, textarea, select {\n  display: block;\n  padding: 10px 6px;\n  width: 100%;\n  border: none;\n  border-bottom: 2px solid gainsboro;\n  color: #555;\n}\nbutton[type=\"submit\"] {\n  margin-top: 30px;\n  padding: 10px 20px;\n  background-color: #333;\n  color: #fff;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n}\n</style>\n"],"mappings":"AA6BA,OAAOA,KAAI,MAAO,OAAO;AACzB,OAAOC,IAAG,MAAO,MAAM,EAAE;;AAEzB,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,OAAO,EAAE;QACPC,IAAI,EAAE,EAAE;QACRC,WAAW,EAAE,EAAE;QACfC,KAAK,EAAE,IAAI;QACXC,KAAK,EAAE,EAAE;QACTC,WAAW,EAAE;MACf,CAAC;MACDC,UAAU,EAAE;IACd,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,UAAUA,CAAA,EAAG;MACXX,KAAK,CAACY,IAAI,CAAC,oCAAoC,EAAE,IAAI,CAACT,OAAO,EAC1DU,IAAI,CAACC,QAAO,IAAK;QAChBC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAACZ,IAAI,CAAC;QAC1Be,KAAK,CAAC,4BAA4B,CAAC;QACnC;MACF,CAAC,EACAC,KAAK,CAACC,KAAI,IAAK;QACdJ,OAAO,CAACI,KAAK,CAAC,qCAAqC,EAAEA,KAAK,CAAC;QAC3DF,KAAK,CAAC,6BAA6B,CAAC;MACtC,CAAC,CAAC;IACN,CAAC;IAEDG,gBAAgBA,CAAA,EAAG;MACjBpB,KAAK,CAACqB,GAAG,CAAC,sCAAsC,EAC7CR,IAAI,CAAC,CAAC;QAAEX;MAAK,CAAC,KAAK;QAClB,IAAI,CAACO,UAAS,GAAIP,IAAI;MACxB,CAAC,EACAgB,KAAK,CAACC,KAAI,IAAK;QACdJ,OAAO,CAACI,KAAK,CAAC,iDAAiD,EAAEA,KAAK,CAAC;MACzE,CAAC,CAAC;IACN;EACF,CAAC;EACDG,OAAOA,CAAA,EAAG;IACR,IAAI,CAACF,gBAAgB,CAAC,CAAC,EAAE;IACzB,IAAI,CAACG,QAAO,GAAItB,IAAI,CAAC,CAAC,EAAE;IACxB,IAAI,CAACsB,QAAQ,CAACC,EAAE,CAAC,gBAAgB,EAAE,IAAI,CAACJ,gBAAgB,CAAC,EAAE;EAC7D,CAAC;EACDK,aAAaA,CAAA,EAAG;IACd,IAAI,CAACF,QAAQ,CAACG,GAAG,CAAC,gBAAgB,EAAE,IAAI,CAACN,gBAAgB,CAAC,EAAE;EAC9D;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}