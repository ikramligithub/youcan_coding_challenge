{"ast":null,"code":"import axios from 'axios';\nexport default {\n  data() {\n    return {\n      products: [],\n      categories: [],\n      sortBy: 'price_asc',\n      selectedCategory: ''\n    };\n  },\n  mounted() {\n    this.fetchProducts();\n    this.fetchCategories();\n  },\n  methods: {\n    fetchProducts() {\n      let url = 'http://127.0.0.1:8000/api/products';\n      // Ajouter des paramètres pour filtrer par catégorie\n      if (this.selectedCategory !== '') {\n        url += '?category=' + this.selectedCategory;\n      }\n      axios.get(url).then(response => {\n        // Tri des produits en fonction de sortBy\n        if (this.sortBy === 'price_asc') {\n          this.products = response.data.sort((a, b) => a.price - b.price);\n        } else if (this.sortBy === 'price_desc') {\n          this.products = response.data.sort((a, b) => b.price - a.price);\n        } else {\n          this.products = response.data;\n        }\n        // Mettre à jour l'URL de l'image pour chaque produit\n        this.products.forEach(product => {\n          product.imageUrl = this.getProductImageUrl(product.image);\n        });\n      }).catch(error => {\n        console.error('Erreur lors de la récupération des produits :', error);\n      });\n    },\n    fetchCategories() {\n      // Récupérer la liste des catégories depuis le serveur\n      axios.get('http://127.0.0.1:8000/api/categories').then(response => {\n        this.categories = response.data;\n      }).catch(error => {\n        console.error('Erreur lors de la récupération des catégories :', error);\n      });\n    },\n    getProductImageUrl(imagePath) {\n      // Construire l'URL complet de l'image à partir du chemin d'accès\n      return 'http://127.0.0.1:8000/api/products/' + imagePath;\n    }\n  },\n  computed: {\n    filteredProducts() {\n      // Appliquer le filtre de catégorie localement\n      if (this.selectedCategory === '') {\n        return this.products;\n      } else {\n        return this.products.filter(product => product.category_id === this.selectedCategory);\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","data","products","categories","sortBy","selectedCategory","mounted","fetchProducts","fetchCategories","methods","url","get","then","response","sort","a","b","price","forEach","product","imageUrl","getProductImageUrl","image","catch","error","console","imagePath","computed","filteredProducts","filter","category_id"],"sources":["C:\\Users\\IKRAM\\Coding_Cha\\app_codingchan\\src\\components\\ProductList.vue"],"sourcesContent":["<template>\n  <div>\n    <!-- Options de tri -->\n    <div>\n      <label for=\"sort\">Trier par :</label>\n      <select v-model=\"sortBy\" @change=\"fetchProducts\">\n        <option value=\"price_asc\">Prix croissant</option>\n        <option value=\"price_desc\">Prix décroissant</option>\n      </select>\n    </div>\n    \n    <!-- Options de filtrage -->\n    <div>\n      <label for=\"category\">Filtrer par catégorie :</label>\n      <select v-model=\"selectedCategory\" @change=\"fetchProducts\">\n        <option value=\"\">Toutes les catégories</option>\n        <option v-for=\"category in categories\" :key=\"category.id\" :value=\"category.id\">{{ category.name }}</option>\n      </select>\n    </div>\n\n    <!-- Liste des produits -->\n    <div v-for=\"product in filteredProducts\" :key=\"product.id\" class=\"product-card\">\n      <h2>{{ product.name }}</h2>\n      <p>{{ product.description }}</p>\n      <p>{{ product.price }} €</p>\n      <!-- Afficher l'image du produit -->\n      <img v-if=\"product.imageUrl\" :src=\"product.imageUrl\" :alt=\"product.name\">\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  data() {\n    return {\n      products: [],\n      categories: [],\n      sortBy: 'price_asc',\n      selectedCategory: '',\n    };\n  },\n  mounted() {\n    this.fetchProducts();\n    this.fetchCategories();\n  },\n  methods: {\n    fetchProducts() {\n      let url = 'http://127.0.0.1:8000/api/products';\n      // Ajouter des paramètres pour filtrer par catégorie\n      if (this.selectedCategory !== '') {\n        url += '?category=' + this.selectedCategory;\n      }\n      axios.get(url)\n        .then(response => {\n          // Tri des produits en fonction de sortBy\n          if (this.sortBy === 'price_asc') {\n            this.products = response.data.sort((a, b) => a.price - b.price);\n          } else if (this.sortBy === 'price_desc') {\n            this.products = response.data.sort((a, b) => b.price - a.price);\n          } else {\n            this.products = response.data;\n          }\n          // Mettre à jour l'URL de l'image pour chaque produit\n          this.products.forEach(product => {\n            product.imageUrl = this.getProductImageUrl(product.image);\n          });\n        })\n        .catch(error => {\n          console.error('Erreur lors de la récupération des produits :', error);\n        });\n    },\n    fetchCategories() {\n      // Récupérer la liste des catégories depuis le serveur\n      axios.get('http://127.0.0.1:8000/api/categories')\n        .then(response => {\n          this.categories = response.data;\n        })\n        .catch(error => {\n          console.error('Erreur lors de la récupération des catégories :', error);\n        });\n    },\n    getProductImageUrl(imagePath) {\n      // Construire l'URL complet de l'image à partir du chemin d'accès\n      return 'http://127.0.0.1:8000/api/products/' + imagePath;\n    }\n  },\n  computed: {\n    filteredProducts() {\n      // Appliquer le filtre de catégorie localement\n      if (this.selectedCategory === '') {\n        return this.products;\n      } else {\n        return this.products.filter(product => product.category_id === this.selectedCategory);\n      }\n    }\n  }\n};\n</script>\n\n<style scoped>\n/* Styles CSS */\n.product-card {\n  border: 1px solid #ccc;\n  border-radius: 5px;\n  padding: 10px;\n  margin-bottom: 20px;\n}\n\n.product-card img {\n  max-width: 100%;\n  height: auto;\n}\n</style>\n"],"mappings":"AAgCA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE,EAAE;MACZC,UAAU,EAAE,EAAE;MACdC,MAAM,EAAE,WAAW;MACnBC,gBAAgB,EAAE;IACpB,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,aAAa,CAAC,CAAC;IACpB,IAAI,CAACC,eAAe,CAAC,CAAC;EACxB,CAAC;EACDC,OAAO,EAAE;IACPF,aAAaA,CAAA,EAAG;MACd,IAAIG,GAAE,GAAI,oCAAoC;MAC9C;MACA,IAAI,IAAI,CAACL,gBAAe,KAAM,EAAE,EAAE;QAChCK,GAAE,IAAK,YAAW,GAAI,IAAI,CAACL,gBAAgB;MAC7C;MACAL,KAAK,CAACW,GAAG,CAACD,GAAG,EACVE,IAAI,CAACC,QAAO,IAAK;QAChB;QACA,IAAI,IAAI,CAACT,MAAK,KAAM,WAAW,EAAE;UAC/B,IAAI,CAACF,QAAO,GAAIW,QAAQ,CAACZ,IAAI,CAACa,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,CAACE,KAAI,GAAID,CAAC,CAACC,KAAK,CAAC;QACjE,OAAO,IAAI,IAAI,CAACb,MAAK,KAAM,YAAY,EAAE;UACvC,IAAI,CAACF,QAAO,GAAIW,QAAQ,CAACZ,IAAI,CAACa,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,CAACC,KAAI,GAAIF,CAAC,CAACE,KAAK,CAAC;QACjE,OAAO;UACL,IAAI,CAACf,QAAO,GAAIW,QAAQ,CAACZ,IAAI;QAC/B;QACA;QACA,IAAI,CAACC,QAAQ,CAACgB,OAAO,CAACC,OAAM,IAAK;UAC/BA,OAAO,CAACC,QAAO,GAAI,IAAI,CAACC,kBAAkB,CAACF,OAAO,CAACG,KAAK,CAAC;QAC3D,CAAC,CAAC;MACJ,CAAC,EACAC,KAAK,CAACC,KAAI,IAAK;QACdC,OAAO,CAACD,KAAK,CAAC,+CAA+C,EAAEA,KAAK,CAAC;MACvE,CAAC,CAAC;IACN,CAAC;IACDhB,eAAeA,CAAA,EAAG;MAChB;MACAR,KAAK,CAACW,GAAG,CAAC,sCAAsC,EAC7CC,IAAI,CAACC,QAAO,IAAK;QAChB,IAAI,CAACV,UAAS,GAAIU,QAAQ,CAACZ,IAAI;MACjC,CAAC,EACAsB,KAAK,CAACC,KAAI,IAAK;QACdC,OAAO,CAACD,KAAK,CAAC,iDAAiD,EAAEA,KAAK,CAAC;MACzE,CAAC,CAAC;IACN,CAAC;IACDH,kBAAkBA,CAACK,SAAS,EAAE;MAC5B;MACA,OAAO,qCAAoC,GAAIA,SAAS;IAC1D;EACF,CAAC;EACDC,QAAQ,EAAE;IACRC,gBAAgBA,CAAA,EAAG;MACjB;MACA,IAAI,IAAI,CAACvB,gBAAe,KAAM,EAAE,EAAE;QAChC,OAAO,IAAI,CAACH,QAAQ;MACtB,OAAO;QACL,OAAO,IAAI,CAACA,QAAQ,CAAC2B,MAAM,CAACV,OAAM,IAAKA,OAAO,CAACW,WAAU,KAAM,IAAI,CAACzB,gBAAgB,CAAC;MACvF;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}